@model TrashCollector.Models.Customer
<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>
@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<style >    #map_canvas img {
        max-width: none
    } </style>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Address.AddressLine)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address.AddressLine)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Address.ZipCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address.ZipCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UserName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.PickUpDay)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PickUpDay)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ExtraPickUp)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ExtraPickUp)
        </dd>

            <dt>
                @Html.DisplayNameFor(model => model.AccountBalance)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AccountBalance)
            </dd>

        </dl>
    </div>
@*attempted to add google maps API but realized I would have to add Lat/Longitude properties for userAddress and generate
    these by selecting drop down list for prepopulated zip code OR I'd have to get an API key for geocoding the addresses.
    Did not have enough time to complete this section*@
@*<div class="container">
    @section scripts{
        <section class="scripts">
            <script type="text/javascript">
                $(document).ready(function () {
                    Initialize();
                });
                google.maps.visualRefresh = true;
                var myCity = 
                var mapOptions = {
                    zoom: 14,
                    center: Milwaukee,
                    mapTypeId: google.maps.MapTypeID.G_NORMAL_MAP
                };
                var latLng = new google.maps.LatLng(, );
                var marker = new google.maps.Marker({
                    poition: latLng,

                })
            </script>
        </section>
        }

</div>*@

        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.CustomerID }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
